/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HomeAppliancesSystem;

import java.awt.Component;
import java.awt.Desktop;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.lang.System.Logger.Level;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import javax.swing.ButtonGroup;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author sun36
 */
public class HomeAppliances extends javax.swing.JFrame {
String brand;
String category;
         LinkedList ListofProduct = new LinkedList();
    LinkedList listFilter = new LinkedList();
    /**
     * Creates new form HomeAppliances
     */
    public HomeAppliances() {
        initComponents();
        // ButtonGroup ButtonGroup1 = new ButtonGroup();
       // ButtonGroup1.add(jRadioButtonsamsung);
       // ButtonGroup1.add(jRadioButtonsony);
       // //ButtonGroup1.add(jRadioButtonlg);
       // ButtonGroup1.add(jRadioButtonphlips);
       // ButtonGroup1.add(jRadioButtonninja);
       // ButtonGroup1.add(jRadioButtonbunn);
       
        // getInitialTableData();   
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonpricesort = new javax.swing.JButton();
        jButtonexit = new javax.swing.JButton();
        jButtonimport = new javax.swing.JButton();
        jComboBoxpricesort = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButtonPriceSearch = new javax.swing.JButton();
        jPriceSearch = new javax.swing.JTextField();
        jButtonCategorySearch = new javax.swing.JButton();
        jComboBoxSrcCat = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSystem = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jserialno = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jname = new javax.swing.JTextField();
        jquantity = new javax.swing.JTextField();
        jprice = new javax.swing.JTextField();
        jButtonclear = new javax.swing.JButton();
        jButtondelete = new javax.swing.JButton();
        jComboBoxcategory = new javax.swing.JComboBox<>();
        jRadioButtonsamsung = new javax.swing.JRadioButton();
        jRadioButtonphlips = new javax.swing.JRadioButton();
        jRadioButtonsony = new javax.swing.JRadioButton();
        jRadioButtonlg = new javax.swing.JRadioButton();
        jRadioButtonninja = new javax.swing.JRadioButton();
        jRadioButtonbunn = new javax.swing.JRadioButton();
        jButtonadd = new javax.swing.JButton();
        jButtonupdate = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemFileOpen = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 102, 0));

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 204));
        jLabel1.setText("HOME");

        jButtonpricesort.setBackground(new java.awt.Color(153, 255, 153));
        jButtonpricesort.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonpricesort.setForeground(new java.awt.Color(51, 0, 255));
        jButtonpricesort.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-sort-64.png"))); // NOI18N
        jButtonpricesort.setText("PRICE SORT");
        jButtonpricesort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonpricesortActionPerformed(evt);
            }
        });

        jButtonexit.setBackground(new java.awt.Color(153, 255, 153));
        jButtonexit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonexit.setForeground(new java.awt.Color(51, 0, 255));
        jButtonexit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-exit-64.png"))); // NOI18N
        jButtonexit.setText("EXIT");
        jButtonexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonexitActionPerformed(evt);
            }
        });

        jButtonimport.setBackground(new java.awt.Color(153, 255, 153));
        jButtonimport.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonimport.setForeground(new java.awt.Color(51, 0, 255));
        jButtonimport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-database-import-64.png"))); // NOI18N
        jButtonimport.setText("IMPORT");
        jButtonimport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonimportActionPerformed(evt);
            }
        });

        jComboBoxpricesort.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBoxpricesort.setForeground(new java.awt.Color(255, 0, 0));
        jComboBoxpricesort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select an Order", "Ascending", "Descending" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonpricesort, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                            .addComponent(jButtonexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonimport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBoxpricesort, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jButtonimport)
                .addGap(88, 88, 88)
                .addComponent(jComboBoxpricesort, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonpricesort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonexit)
                .addGap(135, 135, 135))
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("PRODUCTS");

        jButtonPriceSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonPriceSearch.setForeground(new java.awt.Color(204, 0, 0));
        jButtonPriceSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-search-bar-48.png"))); // NOI18N
        jButtonPriceSearch.setText("SEARCH P");
        jButtonPriceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPriceSearchActionPerformed(evt);
            }
        });

        jPriceSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jButtonCategorySearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonCategorySearch.setForeground(new java.awt.Color(255, 0, 0));
        jButtonCategorySearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-search-bar-48.png"))); // NOI18N
        jButtonCategorySearch.setText("SEARCH C");
        jButtonCategorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCategorySearchActionPerformed(evt);
            }
        });

        jComboBoxSrcCat.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBoxSrcCat.setForeground(new java.awt.Color(204, 0, 0));
        jComboBoxSrcCat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Category", "Major Appliances", "Small Appliances", "Electronic", "Furniture" }));
        jComboBoxSrcCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSrcCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonCategorySearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxSrcCat, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPriceSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPriceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jButtonPriceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPriceSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxSrcCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCategorySearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 255, 204));
        jLabel2.setText("HPSS HOME APPLIANCES MANAGEMENT SYSTEM");

        jTableSystem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTableSystem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTableSystem.setForeground(new java.awt.Color(0, 0, 204));
        jTableSystem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"102", "Fan", "BUNN", "Electronic", "12", "10000"},
                {"305", "Television ", "SONY", "Major Appliances", "13", "30000"},
                {"501", "Grinder", "NINJA", "Electonic", "15", "13000"},
                {"113", "Washing Machine ", "LG", "Major Appliances", "34", "55000"},
                {"114", "Bed", "BUNN", "Furniture", "67", "11000"},
                {"211", "Sofa", "BUNN", "Furniture", "34", "17000"},
                {"223", "Razor", "LG", "Electronic", "23", "4000"},
                {"443", "Motor", "PHLIPS", "Major Appliances", "46", "16000"},
                {"245", "Drawer", "SONY", "Furniture", "26", "21000"},
                {"764", "Generator", "SONY", "Major Appliances", "17", "99000"},
                {"879", "Locker", "SAMSUNG", "Furniture", "18", "18000"},
                {"900", "Computer", "PHLIPS", "Electronic", "16", "120000"},
                {"200", "Laptop", "SAMSUNG", "Electronic", "19", "61000"},
                {"500", "Coffee Machine", "LG", "Small Appliances", "16", "31000"},
                {"555", "Speaker", "SONY", "Electronic", "21", "30000"},
                {"856", "Iron", "NINJA", "Electronic", "22", "7000"},
                {"901", "Mixture", "SAMSUNG", "Small Appliances", "34", "5200"},
                {"902", "Refrigerator", "LG", "Major Appliances", "23", "73000"},
                {"504", "Water Purifier", "NINJA", "Small Appliances", "25", "9400"},
                {"401", "Oven", "PHLIPS", "Small Appliances", "26", "14600"}
            },
            new String [] {
                "SERIAL NO", "NAME", " BRAND", " CATEGORY", " QUANTITY", " PRICE"
            }
        ));
        jTableSystem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSystemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSystem);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 204));
        jLabel3.setText("SERIAL NO:");

        jserialno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 204));
        jLabel4.setText("CATEGORY:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 204));
        jLabel5.setText("NAME:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 255, 204));
        jLabel6.setText("BRAND:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 255, 204));
        jLabel7.setText("QUANTITY:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 255, 204));
        jLabel9.setText("PRICE:");

        jname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jquantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jprice.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jpriceActionPerformed(evt);
            }
        });
        jprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jpriceKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jpriceKeyReleased(evt);
            }
        });

        jButtonclear.setBackground(new java.awt.Color(0, 255, 0));
        jButtonclear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonclear.setForeground(new java.awt.Color(51, 0, 255));
        jButtonclear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-clear-symbol-48.png"))); // NOI18N
        jButtonclear.setText("CLEAR");
        jButtonclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonclearActionPerformed(evt);
            }
        });

        jButtondelete.setBackground(new java.awt.Color(0, 255, 0));
        jButtondelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtondelete.setForeground(new java.awt.Color(51, 0, 255));
        jButtondelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-delete-bin-64.png"))); // NOI18N
        jButtondelete.setText("DELETE");
        jButtondelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondeleteActionPerformed(evt);
            }
        });

        jComboBoxcategory.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jComboBoxcategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Category", "Major Appliances", "Small Appliances", "Electronic", "Furniture" }));
        jComboBoxcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxcategoryActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonsamsung);
        jRadioButtonsamsung.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonsamsung.setText("SAMSUNG");
        jRadioButtonsamsung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonsamsungActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonphlips);
        jRadioButtonphlips.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButtonphlips.setText("PHLIPS");
        jRadioButtonphlips.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonphlipsActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonsony);
        jRadioButtonsony.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonsony.setText("SONY");
        jRadioButtonsony.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonsonyActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonlg);
        jRadioButtonlg.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonlg.setText("LG");
        jRadioButtonlg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonlgActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonninja);
        jRadioButtonninja.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonninja.setText("NINJA");
        jRadioButtonninja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonninjaActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButtonbunn);
        jRadioButtonbunn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRadioButtonbunn.setText("BUNN");
        jRadioButtonbunn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonbunnActionPerformed(evt);
            }
        });

        jButtonadd.setBackground(new java.awt.Color(0, 255, 0));
        jButtonadd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonadd.setForeground(new java.awt.Color(51, 0, 255));
        jButtonadd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-add-column-64.png"))); // NOI18N
        jButtonadd.setText("ADD");
        jButtonadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaddActionPerformed(evt);
            }
        });

        jButtonupdate.setBackground(new java.awt.Color(0, 153, 0));
        jButtonupdate.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButtonupdate.setForeground(new java.awt.Color(0, 0, 153));
        jButtonupdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-update-64.png"))); // NOI18N
        jButtonupdate.setText("UPDATE");
        jButtonupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonupdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jname, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jserialno, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButtonphlips)
                                            .addComponent(jRadioButtonsamsung)
                                            .addComponent(jRadioButtonsony))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButtonbunn)
                                            .addComponent(jRadioButtonlg)
                                            .addComponent(jRadioButtonninja)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jprice, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jquantity, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButtonadd, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jButtonupdate, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonclear, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtondelete, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(44, 44, 44)))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel2)
                .addContainerGap(202, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonupdate)
                            .addComponent(jButtonadd)
                            .addComponent(jButtonclear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtondelete)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jserialno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButtonsamsung)
                                    .addComponent(jRadioButtonlg))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jRadioButtonphlips)
                                    .addComponent(jRadioButtonninja))))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButtonsony)
                            .addComponent(jRadioButtonbunn))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBoxcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jquantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 33, Short.MAX_VALUE))
        );

        jMenuBar1.setBackground(new java.awt.Color(255, 255, 0));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 204), 3));

        jMenu1.setText("File");

        jMenuItemFileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemFileOpen.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItemFileOpen.setForeground(new java.awt.Color(204, 0, 0));
        jMenuItemFileOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-open-file-under-cursor-24.png"))); // NOI18N
        jMenuItemFileOpen.setText("Open File");
        jMenuItemFileOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemFileOpenMouseClicked(evt);
            }
        });
        jMenuItemFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemFileOpenActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemFileOpen);

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItemExit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jMenuItemExit.setForeground(new java.awt.Color(255, 0, 0));
        jMenuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/HomeAppliancesSystem/Image/icons8-exit-24.png"))); // NOI18N
        jMenuItemExit.setText("EXIT");
        jMenuItemExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemExitMouseClicked(evt);
            }
        });
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemExit);

        jMenuBar1.add(jMenu1);

        jMenuHelp.setText("Help");
        jMenuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuHelpMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jpriceActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jpriceActionPerformed

    private void jButtonpricesortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonpricesortActionPerformed
        // TODO add your handling code here:
          // to retrieve user's input from comboBox and store in String variable
        String sortPrice = jComboBoxpricesort.getSelectedItem().toString();
        // to check for empty comboBox
        if (sortPrice.contains("Select an Order")) {
            JOptionPane.showMessageDialog(this, "Please select the order to carry the operation");
        } else {
            TableSystem();
            if (sortPrice.equals("Ascending")) {
                // for ascending order
                Sorting.ascending(listFilter);
                

            } else {
                // for descending order
                Sorting.descending(listFilter);
               
            }
            updateTable();
        }
        
    }//GEN-LAST:event_jButtonpricesortActionPerformed

    private void jRadioButtonlgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonlgActionPerformed
        // TODO add your handling code here:
        brand = "LG";
    }//GEN-LAST:event_jRadioButtonlgActionPerformed

    private void jButtonimportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonimportActionPerformed
        // TODO add your handling code here:
        //code to import the data from excel to table
       DefaultTableModel model = (DefaultTableModel)jTableSystem.getModel();
        File excelFile = null;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;

        String currentDirectoryPath = "C:\\Users\\sun36\\OneDrive\\Documents\\NetBeansProjects\\HPSS HOME APPLIANCES SYSTEM";
        JFileChooser excelFileChooser = new JFileChooser(currentDirectoryPath);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                for (int row = 0; row < excelSheet.getLastRowNum(); row++) {
                    
                   //jTable1 table=new JTable();
                   // JTable table=new JTable(model);
                   // jTable1.setModel(model);
                   // jTable1.setMo
                   

                    Row excelRow = excelSheet.getRow(row);
                   // model.addColumn("Id");
                    //model.addColumn("Name");
                    Cell excelserialno =(excelRow.getCell(0));
                    Cell excelname = excelRow.getCell(1);
                    Cell excelbrand = excelRow.getCell(2);
                    Cell excelcategory = excelRow.getCell(3);
                    Cell excelquantity = excelRow.getCell(4);
                    Cell excelprice = excelRow.getCell(5);
                   
                   // String serialno=excelserialno.getStringCellValue();
                   model.addRow(new Object[]{(int)Float.parseFloat(excelserialno.toString()),excelname.getStringCellValue(), excelbrand.getStringCellValue(), excelcategory.getStringCellValue(), (int)Float.parseFloat(excelquantity.toString()), (int)Float.parseFloat(excelprice.toString())});
                  
                   ListofProduct.add((int)Float.parseFloat(excelserialno.toString()));
                    ListofProduct.add(excelname.getStringCellValue());
                     ListofProduct.add(excelbrand.getStringCellValue());
                      ListofProduct.add(excelcategory.getStringCellValue());
                       ListofProduct.add((int)Float.parseFloat(excelquantity.toString()));
                        ListofProduct.add((int)Float.parseFloat(excelprice.toString()));
                  // this.jTableSystem(ListofProduct);
                   
                   
                }
                 listFilter = (LinkedList) ListofProduct.clone();
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "The file does not exist!" + "\nProgram is terminating.", "File Not Found", JOptionPane.INFORMATION_MESSAGE);
               
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "The file does not exist!" + "\nProgram is terminating.", "File Not Found", JOptionPane.INFORMATION_MESSAGE);
               ;
            }
        }    
    }//GEN-LAST:event_jButtonimportActionPerformed

    private void jButtonaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaddActionPerformed
        // TODO add your handling code here:
        //to add data in table
        String serialno = jserialno.getText();
        String name = jname.getText();
        String quantity = jquantity.getText();
       
        String price = jprice.getText();
        //Disply message if the any textfield is blank while adding data in table
         if (serialno.equals("") || name.equals("") || brand.equals("") || category.equals("") || quantity.equals("") 
                 || price.equals(" "))
         {
            JOptionPane.showMessageDialog(this, "PLEASE INSERT ALL THE NECESSARY DATA ON THE FORM TO COMPLETE THE PROCESS");
         }else{
           
             DefaultTableModel model = (DefaultTableModel)jTableSystem.getModel();
           
        model. insertRow(jTableSystem.getRowCount(), new Object[]{serialno, name, brand, category, quantity, price});
        JOptionPane.showMessageDialog(null, "Data is inserted Sucessfully");
        }
         
    }//GEN-LAST:event_jButtonaddActionPerformed

    private void jComboBoxcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxcategoryActionPerformed
        // TODO add your handling code here:
        category = jComboBoxcategory.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBoxcategoryActionPerformed

    private void jRadioButtonsamsungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonsamsungActionPerformed
        // TODO add your handling code here:
        brand = "SAMSUNG";
    }//GEN-LAST:event_jRadioButtonsamsungActionPerformed

    private void jRadioButtonphlipsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonphlipsActionPerformed
        // TODO add your handling code here:
        brand = "PHLIPS";
    }//GEN-LAST:event_jRadioButtonphlipsActionPerformed

    private void jRadioButtonsonyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonsonyActionPerformed
        // TODO add your handling code here:
        brand = "SONY";
    }//GEN-LAST:event_jRadioButtonsonyActionPerformed

    private void jButtonclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonclearActionPerformed
        // TODO add your handling code here:
        //reset or clear the value of jtextfield
        jserialno.setText("");
        jname.setText("");
        jRadioButtonsamsung.setSelected(false);
        jRadioButtonlg.setSelected(false);
        jRadioButtonphlips.setSelected(false);
        jRadioButtonsony.setSelected(false);
        jRadioButtonninja.setSelected(false);
        jRadioButtonbunn.setSelected(false);
       // brand.setSelection(null);
        jComboBoxcategory.setSelectedItem("Choose Category");
        jprice.setText("");
        jquantity.setText("");      
    }//GEN-LAST:event_jButtonclearActionPerformed

    private void jButtonexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonexitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButtonexitActionPerformed

    private void jButtondeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondeleteActionPerformed
        // TODO add your handling code here:
        //to delete data
        DefaultTableModel model = (DefaultTableModel) jTableSystem.getModel();
        //get selected row index
        try{
        int SelectedRowIndex = jTableSystem.getSelectedRow();
        model.removeRow(SelectedRowIndex);
        }catch(Exception ex)
        {
        JOptionPane.showMessageDialog(null, ex);
        }
        JOptionPane.showMessageDialog(null, "Selected Data is deleted");
    }//GEN-LAST:event_jButtondeleteActionPerformed

    private void jpriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpriceKeyPressed
        // TODO add your handling code here:
        //disply message if other than numeric value is entered
            char charatcer = evt.getKeyChar();
        int keycode = evt.getKeyCode();
        System.out.println(keycode);
        if(!(Character.isDigit(charatcer))){
            if(keycode == 8 || keycode == 46){
                jprice.setEditable(true);
            }
            else{
                jprice.setEditable(false);
                JOptionPane.showMessageDialog(null, "Oops! input other than number detected. Please enter a number","Invalid Input",JOptionPane.ERROR_MESSAGE );
            }
        }
    }//GEN-LAST:event_jpriceKeyPressed

    private void jpriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jpriceKeyReleased
        // TODO add your handling code here:
        jprice.setEditable(true);
    }//GEN-LAST:event_jpriceKeyReleased

    private void jRadioButtonninjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonninjaActionPerformed
        // TODO add your handling code here:
        brand = "NINJA";
    }//GEN-LAST:event_jRadioButtonninjaActionPerformed

    private void jRadioButtonbunnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonbunnActionPerformed
        // TODO add your handling code here:
        brand = "BUNN";
    }//GEN-LAST:event_jRadioButtonbunnActionPerformed

    private void jTableSystemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSystemMouseClicked
        // TODO add your handling code here:
        //display the selected row in jtextfield if mouse is pressed
        int SelectedRow = jTableSystem.getSelectedRow();
       DefaultTableModel tblmodel = (DefaultTableModel)jTableSystem.getModel();
       jserialno.setText(tblmodel.getValueAt(SelectedRow,0).toString());
        jname.setText(tblmodel.getValueAt(SelectedRow,1).toString());
        String brand = tblmodel.getValueAt(SelectedRow,2).toString();
        switch (brand){
            case "SAMSUNG":
            jRadioButtonsamsung.setSelected(true);
             jRadioButtonlg.setSelected(false);
              jRadioButtonbunn.setSelected(false);
               jRadioButtonninja.setSelected(false);
                jRadioButtonsony.setSelected(false);
                 jRadioButtonphlips.setSelected(false);
                 break;
            case "LG":
            jRadioButtonsamsung.setSelected(false);
             jRadioButtonlg.setSelected(true);
              jRadioButtonbunn.setSelected(false);
               jRadioButtonninja.setSelected(false);
                jRadioButtonsony.setSelected(false);
                 jRadioButtonphlips.setSelected(false);
                 break;     
            case "PHLIPS":
            jRadioButtonsamsung.setSelected(false);
             jRadioButtonlg.setSelected(false);
              jRadioButtonbunn.setSelected(false);
               jRadioButtonninja.setSelected(false);
                jRadioButtonsony.setSelected(false);
                 jRadioButtonphlips.setSelected(true);
                 break; 
            case "BUNN":
            jRadioButtonsamsung.setSelected(false);
             jRadioButtonlg.setSelected(false);
              jRadioButtonbunn.setSelected(true);
               jRadioButtonninja.setSelected(false);
                jRadioButtonsony.setSelected(false);
                 jRadioButtonphlips.setSelected(false);
                 break;     
            case "NINJA":
            jRadioButtonsamsung.setSelected(false);
             jRadioButtonlg.setSelected(false);
              jRadioButtonbunn.setSelected(false);
               jRadioButtonninja.setSelected(true);
                jRadioButtonsony.setSelected(false);
                 jRadioButtonphlips.setSelected(false);
                 break; 
            case "SONY":
            jRadioButtonsamsung.setSelected(false);
             jRadioButtonlg.setSelected(false);
              jRadioButtonbunn.setSelected(false);
               jRadioButtonninja.setSelected(false);
                jRadioButtonsony.setSelected(true);
                 jRadioButtonphlips.setSelected(false);
                 break;  
           default:
            jRadioButtonsamsung.setSelected(true);
             jRadioButtonlg.setSelected(true);
              jRadioButtonbunn.setSelected(true);
               jRadioButtonninja.setSelected(true);
                jRadioButtonsony.setSelected(true);
                 jRadioButtonphlips.setSelected(true);
                 break;      
        }
          String category = tblmodel.getValueAt(SelectedRow,3).toString();
          switch(category){
              case "Choose Category":
                  jComboBoxcategory.setSelectedIndex(0);
                  break;
              case "Major Appliances":
                  jComboBoxcategory.setSelectedIndex(1);
                  break;
              case "Small Appliances":
                  jComboBoxcategory.setSelectedIndex(2);
                  break;
              case "Electronic":
                  jComboBoxcategory.setSelectedIndex(3);
                  break;
              case "Furniture":
                  jComboBoxcategory.setSelectedIndex(4);
                  break;    
          }
           jquantity.setText(tblmodel.getValueAt(SelectedRow,4).toString());
            jprice.setText(tblmodel.getValueAt(SelectedRow,5).toString());
       
       
                  
            
    }//GEN-LAST:event_jTableSystemMouseClicked

    private void jMenuItemFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemFileOpenActionPerformed
        // TODO add your handling code here:
        //import file from jmenuitem
         DefaultTableModel model = (DefaultTableModel)jTableSystem.getModel();
        File excelFile = null;
        FileInputStream excelFIS = null;
        BufferedInputStream excelBIS = null;
        XSSFWorkbook excelJTableImport = null;

        String currentDirectoryPath = "C:\\Users\\sun36\\OneDrive\\Documents\\NetBeansProjects\\HPSS HOME APPLIANCES SYSTEM";
        JFileChooser excelFileChooser = new JFileChooser(currentDirectoryPath);
        int excelChooser = excelFileChooser.showOpenDialog(null);
        if (excelChooser == JFileChooser.APPROVE_OPTION) {
            try {
                excelFile = excelFileChooser.getSelectedFile();
                excelFIS = new FileInputStream(excelFile);
                excelBIS = new BufferedInputStream(excelFIS);

                excelJTableImport = new XSSFWorkbook(excelBIS);
                XSSFSheet excelSheet = excelJTableImport.getSheetAt(0);
                for (int row = 0; row < excelSheet.getLastRowNum(); row++) {
                    
                   //jTable1 table=new JTable();
                   // JTable table=new JTable(model);
                   // jTable1.setModel(model);
                   // jTable1.setMo
                   

                    Row excelRow = excelSheet.getRow(row);
                   // model.addColumn("Id");
                    //model.addColumn("Name");
                    Cell excelserialno =excelRow.getCell(0);
                    Cell excelname = excelRow.getCell(1);
                    Cell excelbrand = excelRow.getCell(2);
                    Cell excelcategory = excelRow.getCell(3);
                    Cell excelquantity = excelRow.getCell(4);
                    Cell excelprice = excelRow.getCell(5);
                   
                   // String serialno=excelserialno.getStringCellValue();
                   model.addRow(new Object[]{excelserialno,excelname, excelbrand, excelcategory, excelquantity, excelprice});
                   
                   
                   // System.out.println(excelName);
                    /*for(int column=0;column<excelRow.getLastCellNum();column++)
                    {
                        XSSFCell excelCell=excelRow.getCell(column);
                       // System.out.println(excelCell.getNumericCellValue());
                    
                    }*/
                }
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "The file does not exist!" + "\nProgram is terminating.", "File Not Found", JOptionPane.INFORMATION_MESSAGE);
                // Logger.getLogger(HomeAppliances.class.getName()).log(Level.SEVERE, null, ex);
                 //JOptionPane.showMessageDialog(rootPane, jname);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "The file does not exist!" + "\nProgram is terminating.", "File Not Found", JOptionPane.INFORMATION_MESSAGE);
               // JOptionPane.showMessageDialog(rootPane, jname);
            }

        }
        
     
        
      
    }//GEN-LAST:event_jMenuItemFileOpenActionPerformed

    private void jButtonPriceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPriceSearchActionPerformed
        // TODO add your handling code here:
          LinkedList listPrice = new LinkedList();
        listPrice.clear();

        // to retrieve user's input from textField and store in String variable
        String searchPrice = jPriceSearch.getText();
        if ("".equals(searchPrice)) {
              JOptionPane.showMessageDialog(this, "Please enter a price to search the data");
        } else {
            // to store data in LinkedList
            int rowCount = jTableSystem.getRowCount();
            for (int i = 0; i < rowCount; i++) {
                String price = (String) jTableSystem.getValueAt(i, 5);
                listPrice.add(price);
            }

            // to sort the LinkedList in ascending order
            BinarySearch.sortPrice(listPrice);

            // binarysearch the input data in LinkedList and retrive position
            int low = 0;
            int high = listPrice.size();
            int position = BinarySearch.binarySearch(listPrice, low, high, Integer.parseInt(searchPrice));
            if (position == -1) {
                 JOptionPane.showMessageDialog(this, "The price you enter doesnot exsist","MATCH NOT FOUND",JOptionPane.INFORMATION_MESSAGE);
            } else {
                // to compare the searched value position and retrieve other values from LinkedList
                TableSystem();
                Sorting.ascending(listFilter);

                String serialno = (String) listFilter.get(((position + 1) * 6) - 6);
                String name = (String) listFilter.get(((position + 1) * 6) - 5);
                String brand = (String) listFilter.get(((position + 1) * 6) - 4);
                String category = (String) listFilter.get(((position + 1) * 6) - 3);
                String quantity = (String) listFilter.get(((position + 1) * 6) - 2);
                String price = (String) listPrice.get(position);

             
               JOptionPane.showMessageDialog(null," The name of product is " + name + " and BRAND = " + brand + " and CATEGORY = " + category + " and Remaining Quantity = " + quantity, "MATCH FOUND", JOptionPane.INFORMATION_MESSAGE);
                
            }
            jPriceSearch.setText("");
        }
       
        
    }//GEN-LAST:event_jButtonPriceSearchActionPerformed

    private void jButtonCategorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCategorySearchActionPerformed
        // TODO add your handling code here:
        //peform category search
         String result;
         //System.out.println(jTableSystem.getValueAt(3,3).toString());
        int count = 0;
        String searchValue = (String) jComboBoxSrcCat.getSelectedItem().toString();
        String listOfItems = "";
        for (int i = 0; i < jTableSystem.getRowCount(); i++){
            String value = (String) jTableSystem.getValueAt(i, 3);
            System.out.print(value);
            if (searchValue.equals(value)){
                String serialno = String.valueOf(jTableSystem.getValueAt(i, 0));
                String name = String.valueOf(jTableSystem.getValueAt(i, 1));
                String brand = String.valueOf(jTableSystem.getValueAt(i, 2));
                String quantity = String.valueOf(jTableSystem.getValueAt(i, 4));
                String price = String.valueOf(jTableSystem.getValueAt(i, 5));
              
                count++;
                listOfItems += String.valueOf(count) + ". Serial Number = " + serialno + ", with Name = " + name  + ". Brand = " + brand + " with Quantity = " + quantity + ". Price = " + price + "\n";
            }
        }
        result =  count + " products were found with the given category :\n" + listOfItems;
        JOptionPane.showMessageDialog(null, result, "Match Found!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonCategorySearchActionPerformed

    private void jMenuItemFileOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemFileOpenMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenuItemFileOpenMouseClicked

    private void jMenuItemExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemExitMouseClicked
        // TODO add your handling code here:
        //to exit from system
        dispose();
    }//GEN-LAST:event_jMenuItemExitMouseClicked

    private void jMenuHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuHelpMouseClicked
        // TODO add your handling code here:
        // display file in desktop
         if(Desktop.isDesktopSupported()){
            try{
                Desktop.getDesktop().open(new File("src/HomeAppliancesSystem/Files/userguide.pdf"));
            }
            catch(IOException e){
                System.out.println(e);
            }
        }
        else{
            System.out.println("not supported");
        }
    }//GEN-LAST:event_jMenuHelpMouseClicked

    private void jButtonupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonupdateActionPerformed
        // TODO add your handling code here:
        int SelectedRow2 = jTableSystem.getSelectedRow();
        DefaultTableModel tblmodel = (DefaultTableModel)jTableSystem.getModel();
        if(SelectedRow2 >=0)
        {
          tblmodel.setValueAt(jserialno.getText(),SelectedRow2, 0); 
           tblmodel.setValueAt(jname.getText(),SelectedRow2, 1);
           
           tblmodel.setValueAt(brand,SelectedRow2, 2);
             tblmodel.setValueAt(jComboBoxcategory.getSelectedItem(),SelectedRow2, 3);
              tblmodel.setValueAt(jquantity.getText(),SelectedRow2, 4);
               tblmodel.setValueAt(jprice.getText(),SelectedRow2, 5);
               
          JOptionPane.showMessageDialog(this, "Table is Updated Sucessfully");     
               
        }else{
        JOptionPane.showMessageDialog(this, "Select a row to update the table");
        }
    }//GEN-LAST:event_jButtonupdateActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jComboBoxSrcCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSrcCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSrcCatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeAppliances().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButtonCategorySearch;
    private javax.swing.JButton jButtonPriceSearch;
    private javax.swing.JButton jButtonadd;
    private javax.swing.JButton jButtonclear;
    private javax.swing.JButton jButtondelete;
    private javax.swing.JButton jButtonexit;
    private javax.swing.JButton jButtonimport;
    private javax.swing.JButton jButtonpricesort;
    private javax.swing.JButton jButtonupdate;
    private javax.swing.JComboBox<String> jComboBoxSrcCat;
    private javax.swing.JComboBox<String> jComboBoxcategory;
    private javax.swing.JComboBox<String> jComboBoxpricesort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemFileOpen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jPriceSearch;
    private javax.swing.JRadioButton jRadioButtonbunn;
    private javax.swing.JRadioButton jRadioButtonlg;
    private javax.swing.JRadioButton jRadioButtonninja;
    private javax.swing.JRadioButton jRadioButtonphlips;
    private javax.swing.JRadioButton jRadioButtonsamsung;
    private javax.swing.JRadioButton jRadioButtonsony;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSystem;
    private javax.swing.JTextField jname;
    private javax.swing.JTextField jprice;
    private javax.swing.JTextField jquantity;
    private javax.swing.JTextField jserialno;
    // End of variables declaration//GEN-END:variables
  private void TableSystem() {
        // to clear data from LinkedList
        ListofProduct.clear();

        // to insert updated data to LinkedList
        DefaultTableModel model = (DefaultTableModel) jTableSystem.getModel();
        int rowCount = jTableSystem.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            String serialno = (String) jTableSystem.getValueAt(i, 0);
            String name = (String) jTableSystem.getValueAt(i, 1);
            String brand = (String) jTableSystem.getValueAt(i, 2);
            String category = (String) jTableSystem.getValueAt(i, 3);
            String quantity = (String) jTableSystem.getValueAt(i, 4);
            String price = (String) jTableSystem.getValueAt(i, 5);
            

            ListofProduct.add(serialno);
            ListofProduct.add(name);
            ListofProduct.add(brand);
            ListofProduct.add(category);
            ListofProduct.add(quantity);
            ListofProduct.add(price);
           
        }

        listFilter = (LinkedList) ListofProduct.clone();
    }
    
    private void updateTable() {
        // to clear all data from table 
        DefaultTableModel model = (DefaultTableModel) jTableSystem.getModel();
        model.setRowCount(0);
        // to insert filtered data back into table
       // int sNum = 1;
        for (int i = 0; i < listFilter.size(); i = i + 6) {
            model.addRow(new Object[]{listFilter.get(0 + i), listFilter.get(1 + i), listFilter.get(2 + i), listFilter.get(3 + i), listFilter.get(4 + i), listFilter.get(5 + i)});
           // sNum++;
        }
    }
}
    
    
    
    
